Traceback (most recent call last):
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/cghiaus/opt/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Simulation with outdoor temperature from weather data with Pandas
# -----------------------------------------------------------------
start_date = '2000-04-10'
end_date = '2000-05-15'

# read data and keep air temperature
filename = '../weather_data/FRA_Lyon.074810_IWEC.epw'
[data, meta] = dm4bem.read_epw(filename, coerce_year=None)
weather = data[["temp_air"]].copy()
del data

# replace years with year 2000 and select time interval
weather.index = weather.index.map(lambda t: t.replace(year=2000))
weather = weather.loc[start_date:end_date]

# resample weather data
data = weather['temp_air']
data = data.resample(str(Î”t) + 's').interpolate(method='linear')
data = data.rename('To').to_frame()

# indoor auxiliary heat
data['Qa'] = 0 * np.ones(data.shape[0])

# input vector
u = data[['To', 'Qa']]

# initial conditions
Î¸_exp = Î¸0 * np.ones([As.shape[0], u.shape[0]])
Î¸_imp = Î¸0 * np.ones([As.shape[0], u.shape[0]])

# time integration: Euler explicit & implicit
n_states = As.shape[0]
I = np.eye(n_states)

for k in range(u.shape[0] - 1):
    Î¸_exp[:, k + 1] = (I + Î”t * As) @ Î¸_exp[:, k]\
        + Î”t * Bs @ u.iloc[k, :]
    Î¸_imp[:, k + 1] = np.linalg.inv(I - Î”t * As) @\
        (Î¸_imp[:, k] + Î”t * Bs @ u.iloc[k, :])

data['Î¸i_exp'] = Î¸_exp[-1, :]
data['Î¸i_imp'] = Î¸_imp[-1, :]

ax = data[['To', 'Î¸i_exp']].plot()
ax.legend(['Outdoor temperature', 'Indoor temperature'])
ax.set(xlabel='Time',
       ylabel='Air temperature, $Î¸$ / Â°C',
       title='Explicit Euler')
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32moffsets.pyx:4548[0m, in [0;36mpandas._libs.tslibs.offsets.to_offset[0;34m()[0m

[0;31mValueError[0m: invalid literal for int() with base 10: '360.0'

The above exception was the direct cause of the following exception:

[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[46], line 18[0m
[1;32m     16[0m [38;5;66;03m# resample weather data[39;00m
[1;32m     17[0m data [38;5;241m=[39m weather[[38;5;124m'[39m[38;5;124mtemp_air[39m[38;5;124m'[39m]
[0;32m---> 18[0m data [38;5;241m=[39m data[38;5;241m.[39mresample([38;5;28mstr[39m(Î”t) [38;5;241m+[39m [38;5;124m'[39m[38;5;124ms[39m[38;5;124m'[39m)[38;5;241m.[39minterpolate(method[38;5;241m=[39m[38;5;124m'[39m[38;5;124mlinear[39m[38;5;124m'[39m)
[1;32m     19[0m data [38;5;241m=[39m data[38;5;241m.[39mrename([38;5;124m'[39m[38;5;124mTo[39m[38;5;124m'[39m)[38;5;241m.[39mto_frame()
[1;32m     21[0m [38;5;66;03m# indoor auxiliary heat[39;00m

File [0;32m~/opt/anaconda3/lib/python3.11/site-packages/pandas/core/generic.py:9439[0m, in [0;36mNDFrame.resample[0;34m(self, rule, axis, closed, label, convention, kind, on, level, origin, offset, group_keys)[0m
[1;32m   9436[0m [38;5;28;01melse[39;00m:
[1;32m   9437[0m     axis [38;5;241m=[39m [38;5;241m0[39m
[0;32m-> 9439[0m [38;5;28;01mreturn[39;00m get_resampler(
[1;32m   9440[0m     cast([38;5;124m"[39m[38;5;124mSeries | DataFrame[39m[38;5;124m"[39m, [38;5;28mself[39m),
[1;32m   9441[0m     freq[38;5;241m=[39mrule,
[1;32m   9442[0m     label[38;5;241m=[39mlabel,
[1;32m   9443[0m     closed[38;5;241m=[39mclosed,
[1;32m   9444[0m     axis[38;5;241m=[39maxis,
[1;32m   9445[0m     kind[38;5;241m=[39mkind,
[1;32m   9446[0m     convention[38;5;241m=[39mconvention,
[1;32m   9447[0m     key[38;5;241m=[39mon,
[1;32m   9448[0m     level[38;5;241m=[39mlevel,
[1;32m   9449[0m     origin[38;5;241m=[39morigin,
[1;32m   9450[0m     offset[38;5;241m=[39moffset,
[1;32m   9451[0m     group_keys[38;5;241m=[39mgroup_keys,
[1;32m   9452[0m )

File [0;32m~/opt/anaconda3/lib/python3.11/site-packages/pandas/core/resample.py:1969[0m, in [0;36mget_resampler[0;34m(obj, kind, **kwds)[0m
[1;32m   1965[0m [38;5;28;01mdef[39;00m [38;5;21mget_resampler[39m(obj: Series [38;5;241m|[39m DataFrame, kind[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwds) [38;5;241m-[39m[38;5;241m>[39m Resampler:
[1;32m   1966[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m   1967[0m [38;5;124;03m    Create a TimeGrouper and return our resampler.[39;00m
[1;32m   1968[0m [38;5;124;03m    """[39;00m
[0;32m-> 1969[0m     tg [38;5;241m=[39m TimeGrouper([38;5;241m*[39m[38;5;241m*[39mkwds)
[1;32m   1970[0m     [38;5;28;01mreturn[39;00m tg[38;5;241m.[39m_get_resampler(obj, kind[38;5;241m=[39mkind)

File [0;32m~/opt/anaconda3/lib/python3.11/site-packages/pandas/core/resample.py:2046[0m, in [0;36mTimeGrouper.__init__[0;34m(self, freq, closed, label, how, axis, fill_method, limit, kind, convention, origin, offset, group_keys, **kwargs)[0m
[1;32m   2043[0m [38;5;28;01mif[39;00m convention [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m {[38;5;28;01mNone[39;00m, [38;5;124m"[39m[38;5;124mstart[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mend[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124me[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124ms[39m[38;5;124m"[39m}:
[1;32m   2044[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mUnsupported value [39m[38;5;132;01m{[39;00mconvention[38;5;132;01m}[39;00m[38;5;124m for `convention`[39m[38;5;124m"[39m)
[0;32m-> 2046[0m freq [38;5;241m=[39m to_offset(freq)
[1;32m   2048[0m end_types [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mM[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mA[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mQ[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mBM[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mBA[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mBQ[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mW[39m[38;5;124m"[39m}
[1;32m   2049[0m rule [38;5;241m=[39m freq[38;5;241m.[39mrule_code

File [0;32moffsets.pyx:4460[0m, in [0;36mpandas._libs.tslibs.offsets.to_offset[0;34m()[0m

File [0;32moffsets.pyx:4557[0m, in [0;36mpandas._libs.tslibs.offsets.to_offset[0;34m()[0m

[0;31mValueError[0m: Invalid frequency: 360.0s

